<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.projectex.product.ProductMapper">

    <!-- 구매 예정 상품 or 확정 상품 리스트 -->
    <select id="selProductList">
        SELECT a.product_pk as productPk, b.category_pk as categoryPk, a.user_pk as userPk,
        b.category_nm as categoryNm,a.product_nm as productNm ,a.memo,a.created_at as createdAt,
        a.buying_check as buyingCheck ,DATE(a.buying_date) as buyingDate
        FROM t_purchase_product a
        JOIN t_category b
        ON a.category_pk = b.category_pk
        <where>
            a.user_pk = #{userPk}
            <choose>
                <when test="choiceList == 0">
                    AND a.buying_check <![CDATA[<]]> 2
                </when>
                <when test="choiceList == 1">
                    AND a.buying_check = 0
                </when>
                <when test="choiceList == 2">
                    AND a.buying_check = 1
                </when>
            </choose>
            <!--            <if test="createdAt != null and createdAt != ''">-->
            <!--                AND DATE(a.created_at) = #{createdAt}-->
            <!--            </if>-->
        </where>
        ORDER BY a.created_at DESC
    </select>

    <!-- 상품 등록 -->
    <insert id="insProduct" useGeneratedKeys="true" keyProperty="productPk">
        INSERT INTO t_purchase_product
        SET category_pk = #{categoryPk}
        ,user_pk = #{userPk}
        ,product_nm = #{productNm}
        <if test="memo != '' and memo != null">
            ,memo = #{memo}
        </if>
    </insert>

    <!-- 구매 확정 -->
    <update id="patchProduct">
        UPDATE t_purchase_product
        SET buying_check = 1
        ,buying_date = NOW()
        WHERE product_pk = #{productPk} AND user_pk = #{userPk}
    </update>
    <update id="returnProduct">
        UPDATE t_purchase_product
        SET buying_check = 0
        ,buying_date = NULL
        WHERE product_pk = #{productPk} AND user_pk = #{userPk}
    </update>

    <!-- 구매예정 상품 수정 -->
    <update id="putProduct">
        UPDATE t_purchase_product
        SET
        <if test="productNm != null and productNm != ''">
            product_nm = #{productNm}
        </if>
        <if test="categoryPk != null and categoryPk != ''">
        ,category_pk = #{categoryPk}
        </if>
        <choose>
            <when test="memo != null and memo != ''">
                ,memo = #{memo}
            </when>
            <otherwise>
                ,memo = NULL
            </otherwise>
        </choose>
        WHERE product_pk = #{productPk} AND buying_check = 0 AND user_pk = #{userPk}
    </update>

    <!-- 구매 예정 상품 삭제 -->
    <delete id="delProduct">
        DELETE FROM t_purchase_product
        <where>
            product_pk =
            <!-- <foreach collection="productPk" item="productPk" open="(" close=" )" separator=","> -->
            #{productPk}
            <!-- </foreach>  -->
            AND buying_check = 0 AND user_pk = #{userPk}
        </where>
    </delete>

    <!-- 구매 확정 상품 삭제시 2로바꾸기 -->
    <update id="patchConfirmed">
        UPDATE t_purchase_product
        <set>
            buying_check = 2
        </set>
        WHERE
        <!-- <foreach collection="productPk" item="productPk" open="(" close=")" separator=","> -->
        product_pk = #{productPk}
        <!--</foreach> -->
        AND buying_check = 1 AND user_pk = #{userPk}
    </update>

    <!-- Entity -->
    <select id="selEntity">
        SELECT product_pk as productPk, user_pk as userPk, category_pk as categoryPk , product_nm, memo, created_at as
        createdAt, updated_at as updatedAt,
        buying_check as buyingCheck, buying_date as buyingDate
        FROM t_purchase_product
        <where>
            product_pk = #{productPk}
        </where>
    </select>

</mapper>